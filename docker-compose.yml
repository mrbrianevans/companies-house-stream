version: '3'
services:
  pubsubdb:
    image: redis
    restart: unless-stopped
    volumes:
      - redisdata:/data

  client: # builds the frontend into a volume to be served by caddy
    build: client-alpine
    volumes:
      - client_dist:/client/dist # this MUST match the workdir set in the Dockerfile

  webserver:
    image: caddy
    restart: unless-stopped
    environment:
      SITE_ADDRESS: ${SITE_ADDRESS:-companies.stream}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - client_dist:/client
      - caddy_data:/data
      - caddy_config:/config

  event-publisher:
    build: server
    command: npm run stream-pub
    environment:
      PUBSUB_REDIS_IP: pubsubdb
    env_file:
      - .api.env

  event-subscriber:
    build: server
    command: npm run stream-sub
    environment:
      PUBSUB_REDIS_IP: pubsubdb

  rest-api:
    build: server
    command: npm run api
    volumes:
      - mongodata:/mongodata
    env_file:
      - .api.env


volumes:
  redisdata:
  caddy_data:
    external: true
  caddy_config:
  mongodata:
  client_dist:
